import asyncio
import logging
from logging.handlers import RotatingFileHandler

from app.config import settings


class TelegramHandler(logging.Handler):
    """–û—Ç–ø—Ä–∞–≤–∫–∞ –ª–æ–≥–æ–≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É —Ç–≥ –∫–∞–Ω–∞–ª–∞."""
    def __init__(self, bot):
        super().__init__()
        self.bot = bot

    def emit(self, record):
        if record.levelno >= self.level:
            error_msg = (
                f"üö® <b>{record.levelname}</b>\n\n"
                f"‚Ä¢ <b>–°–æ–æ–±—â–µ–Ω–∏–µ</b>: {record.getMessage()}\n"
                f"‚Ä¢ <b>–ú–æ–¥—É–ª—å</b>: {record.pathname}:{record.lineno}\n"
                f"‚Ä¢ <b>–í—Ä–µ–º—è</b>: {self.format(record.created)}"
            )
            for admin_id in settings.ADMINS:
                try:
                    asyncio.create_task(
                        self.bot.send_message(
                            admin_id,
                            error_msg,
                            parse_mode="HTML"
                        )
                    )
                except Exception as e:
                    logging.error(f"–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –ª–æ–≥–∞ –≤ Telegram: {e}")


def file_handler() -> RotatingFileHandler :
    """–ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Ñ–∞–π–ª–æ–≤–æ–≥–æ –ª–æ–≥–≥–µ—Ä–∞ —Å —Ä–æ—Ç–∞—Ü–∏–µ–π"""
    settings.LOG_FILE.mkdir(parents=True, exist_ok=True)
    file_handler = RotatingFileHandler(
        filename=settings.LOG_FILE,
        maxBytes=settings.LOG_MAX_SIZE,
        backupCount=settings.LOG_BACKUP_COUNT,
        encoding=settings.ENCODING
    )
    return file_handler
