version: '3.8'

services:
  nginx:
    image: nginx:alpine
    container_name: mainecoon_nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./app/logs/nginx/:/var/log/nginx/
      - ./nginx/templates/:/etc/nginx/templates/
      - ./nginx/ssl:/etc/nginx/ssl
      - ./app/media:/app/media
    depends_on:
      - bot
    restart: unless-stopped
    env_file:
      - .env
    networks:
      - bot-network

  bot:
    build: .
    container_name: mainecoon_bot
    stdin_open: true
    tty: true
    restart: unless-stopped
    env_file:
      - .env
    entrypoint: bash -c "alembic upgrade head && python main.py"
#    ports:
#      - "8000:8000"
    volumes:
      - ./app/logs:/app/logs
      - ./app/media:/app/media
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - bot-network

  postgres:
    image: postgres:16.1
    container_name: mainecoon_postgres
    restart: unless-stopped
    env_file:
      - .env
    volumes:
      - postgres_data:/var/lib/postgresql/data
#    ports:
#      - "5432:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}" ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    networks:
      - bot-network

  redis:
    image: redis:7-alpine
    container_name: mainecoon_redis
    restart: unless-stopped
#    ports:
#      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 10s
      timeout: 3s
      retries: 5
    networks:
      - bot-network

volumes:
  postgres_data:
  redis_data:
  media_volume:

networks:
  bot-network:
    driver: bridge